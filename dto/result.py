from dataclasses import dataclass


@dataclass
class Result:
    """
    Класс для хранения и представления результатов решения уравнения.

    Атрибуты:
    ---------
    root : float
        Найденный корень уравнения.
    function_value_at_root : float
        Значение функции в найденном корне. Близко к нулю при успешном решении.
    iterations : int
        Количество итераций, потребовавшихся для нахождения корня.
    decimal_places : int
        Количество десятичных знаков, до которых округляется корень.
        Определяет точность представления результата.

    Методы:
    -------
    __str__()
        Формирует человекочитаемое строковое представление результата.
    """

    root: float
    function_value_at_root: float
    iterations: int
    decimal_places: int

    def __str__(self):
        """
        Формирует строку с результатами вычислений.

        Включает:
        - Найденный корень, округленный до указанного количества знаков
        - Значение функции в корне (без округления)
        - Количество выполненных итераций

        Пример вывода:
        --------------
        Результат:
        Найденный корень уравнения: 1.4142
        Значение функции в корне: 6.28035714876623e-09
        Число итераций: 5
        """
        return (f'Результат:\n'
                f'Найденный корень уравнения: {round(self.root, self.decimal_places)}\n'
                f'Значение функции в корне: {self.function_value_at_root:.2e}\n'
                f'Число итераций: {self.iterations}')